name: Build and Export APK

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - { icon: 'ðŸŸ¦', guest: x86_64-softmmu, arch: x86 }
          - { icon: 'ðŸŸ¦', guest: aarch64-softmmu, arch: arm }
    name: ðŸš§${{ matrix.icon }} ${{ matrix.guest }} Build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 31
        build-tools: 31.0.0
        
    - name: Set up Android NDK
      id: setup-ndk
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r23b
        
    - name: Setup Gradle 8.2
      uses: gradle/actions/setup-gradle@v4
      with:
       gradle-version: "8.2"
       
    - name: Ensure Gradle Wrapper Exists
      run: |
          echo "Generating gradle wrapper ..."
          gradle wrapper --gradle-version  8.2
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y make autoconf automake git python3 binutils
        sudo apt-get install -y libtool-bin pkg-config flex bison gettext texinfo rsync gtk-doc-tools
        
    - name: Verify directory structure
      run: |
        echo "Listing directory structure"
        ls -R
        
    - name: Get and compile external libraries
      run: |
        cd ./limbo-android-lib/src/main/jni
            #Make sure you're under the jni directory
            ##### Get QEMU
            # download link:  http://download.qemu-project.org/qemu-x.x.x.tar.xz 
            # Current versions supported by limbo: 5.1.0 and 2.9.1
            # example for version 5.1.0:
            wget https://download.qemu.org/qemu-5.1.0.tar.xz -P /tmp/
            tar -xJf /tmp/qemu-5.1.0.tar.xz
            mv qemu-5.1.0 qemu
            
            ##### GET glib
            wget https://ftp.gnome.org/pub/GNOME/sources/glib/2.56/glib-2.56.1.tar.xz -P /tmp/
            tar -xJf /tmp/glib-2.56.1.tar.xz
            mv glib-2.56.1 glib
            
            ##### GET libffi
            wget https://sourceware.org/pub/libffi/libffi-3.3.tar.gz -P /tmp/
            tar -xzf /tmp/libffi-3.3.tar.gz
            mv libffi-3.3 libffi
            
            ##### GET pixman
            wget https://www.cairographics.org/releases/pixman-0.40.0.tar.gz -P /tmp/
            tar -xzf /tmp/pixman-0.40.0.tar.gz
            mv pixman-0.40.0 pixman
            
            ##### GET SDL2
            wget https://www.libsdl.org/release/SDL2-2.0.8.tar.gz -P /tmp/
            tar -xzf /tmp/SDL2-2.0.8.tar.gz
            mv SDL2-2.0.8 SDL2

    - name: Apply patches
      run: |
        if [ -d "./limbo-android-lib/src/main/jni/qemu/" ]; then
          cd ./limbo-android-lib/src/main/jni/qemu/
          patch -p1 < ../patches/qemu-5.1.0.patch
          cd ../../../../..
        fi
        if [ -d "./limbo-android-lib/src/main/jni/glib/" ]; then
          cd ./limbo-android-lib/src/main/jni/glib/
          patch -p1 < ../patches/glib-2.56.1.patch
          cd ../../../../..
        fi
        if [ -d "./limbo-android-lib/src/main/jni/SDL2/" ]; then
          cd ./limbo-android-lib/src/main/jni/SDL2/
          patch -p1 < ../patches/sdl2-2.0.8.patch
          cd ../../../../..
        fi
      
    - name: Make limbo
      run: |
        cd limbo-android-lib/src/main/jni
        export NDK_ROOT=${{ steps.setup-ndk.outputs.ndk-path }}
        export NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}
        export PATH=$NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
        export BUILD_GUEST=${{ matrix.guest }}
        export BUILD_HOST=armeabi-v7a
        make limbo
        make distclean
        export BUILD_HOST=arm64-v8a
        make limbo
        make distclean
        export BUILD_HOST=x86
        make limbo
        make distclean
        export BUILD_HOST=x86_64
        make limbo
        make distclean
        
    - name: Build and export APK
      run: |
        ./gradlew assembleRelease
        mkdir -p app/build/outputs/apk/release/
        cp limbo-android-${{ matrix.arch }}/build/outputs/apk/release/limbo-android-${{ matrix.arch }}-release-unsigned.apk app/build/outputs/apk/release/limbo-android-${{ matrix.arch }}-release.apk
        
    - uses: r0adkll/sign-android-release@v1
      name: Sign app APK
      # ID used to access action output
      id: sign_app
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "31.0.0"
        
    - name: Upload APK
      uses: actions/upload-artifact@v2
      with:
        name: limbo-android-${{ matrix.arch }}-release.apk
        path: app/build/outputs/apk/release/limbo-android-${{ matrix.arch }}-release.apk
        
    - name: Clean up
      run: |
        sudo apt-get clean
